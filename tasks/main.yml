---
- block:
  - name: setup dehydrated
    lineinfile:
      path: "/etc/dehydrated/domains.txt"
      line: "{{ item }}"
      create: "yes"
    with_items: "{{ letsencrypt_auth_domain_names }}"
  - name: install nginx config
    template:
      src: "nginx_before_auth.j2"
      dest: "/etc/nginx/sites-available/{{ item }}"
      owner: "root"
      group: "root"
      mode: "0644"
    when: "not /var/lib/dehydrated/certs/{{ item }}/fullchain.pem|is_file"
    with_items: "{{ letsencrypt_auth_domain_names }}"
  - name: create soft link
    file:
      src: "/etc/nginx/sites-available/{{ item }}"
      dest: "/etc/nginx/sites-enabled/{{ item }}"
      owner: "root"
      group: "root"
      state: "link"
    when: "not /var/lib/dehydrated/certs/{{ item }}/fullchain.pem|is_file"
    with_items: "{{ letsencrypt_auth_domain_names }}"
  - name: reload nginx
    systemd: state=reloaded name=nginx
  - name: getting certs
    command: "dehydrated -c"
  - name: check if nginx conf already has ssl settings
    command: "grep -iP '^\s*ssl\s*on\s*;' /etc/nginx/sites-available/{{ item }}"
    register: "nginx_{{ item }}_stat"
    ignore_erros: "yes"
    with_items: "{{ letsencrypt_auth_domain_names }}"
  - name: activate certs
    template:
      src: "nginx_after_auth.j2"
      dest: "/etc/nginx/sites-available/{{ item }}"
      owner: "root"
      group: "root"
      mode: "0644"
    when: "nginx_{{ item }}_stat|failed"
    with_items: "{{ letsencrypt_auth_domain_names }}"
  - name: reload nginx
    systemd: state=reloaded name=nginx
  tags:
    - letsencrypt_auth
